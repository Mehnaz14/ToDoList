{"ast":null,"code":"var _jsxFileName = \"D:\\\\todolist\\\\todolist\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ToDoLists from './ToDoLists';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [inputList, setInputList] = useState(\"\");\n  const [Items, setItems] = useState([]);\n  const ItemEvent = event => {\n    setInputList(event.target.value);\n  };\n  const listOfItems = () => {\n    setItems(oldItems => {\n      return [...oldItems, inputList];\n    });\n    setInputList(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center_div\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"ToDo List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Add a Items\",\n          value: inputList,\n          onChange: ItemEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: listOfItems,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: Items.map(itemval => {\n            return /*#__PURE__*/_jsxDEV(ToDoLists, {\n              text: itemval\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(App, \"jznigvutK0kGgzQWCxK2yT1q2sk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ToDoLists","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","inputList","setInputList","Items","setItems","ItemEvent","event","target","value","listOfItems","oldItems","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","map","itemval","text","_c","$RefreshReg$"],"sources":["D:/todolist/todolist/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ToDoLists from './ToDoLists';\r\n\r\nconst App=()=>{\r\n    const[inputList, setInputList]=useState(\"\");\r\n    const [Items, setItems]=useState([]);\r\n\r\n    const ItemEvent=(event)=>{\r\n        setInputList(event.target.value);\r\n\r\n    };\r\n    const listOfItems=()=>{\r\n      setItems((oldItems)=>{\r\n        return [...oldItems,inputList];\r\n\r\n      });  \r\n      setInputList(\"\");\r\n    };\r\n\r\n    return(\r\n        <>\r\n            <div className=\"main_div\">\r\n                <div className=\"center_div\">\r\n                    <br/>\r\n                    <h1>ToDo List</h1>\r\n                    <br/>\r\n                    <input type=\"text\" placeholder=\"Add a Items\" \r\n                    value={inputList}\r\n                    onChange={ItemEvent}/>\r\n                    <button onClick={listOfItems}>+</button>\r\n                    <ol>\r\n            \r\n                        {Items.map((itemval)=>{\r\n                           return  <ToDoLists text={itemval}/>;\r\n                        })}\r\n                    </ol>\r\n                </div>      \r\n                </div>\r\n        </>\r\n    );\r\n};\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpC,MAAMC,GAAG,GAACA,CAAA,KAAI;EAAAC,EAAA;EACV,MAAK,CAACC,SAAS,EAAEC,YAAY,CAAC,GAACT,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAACX,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMY,SAAS,GAAEC,KAAK,IAAG;IACrBJ,YAAY,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAEpC,CAAC;EACD,MAAMC,WAAW,GAACA,CAAA,KAAI;IACpBL,QAAQ,CAAEM,QAAQ,IAAG;MACnB,OAAO,CAAC,GAAGA,QAAQ,EAACT,SAAS,CAAC;IAEhC,CAAC,CAAC;IACFC,YAAY,CAAC,EAAE,CAAC;EAClB,CAAC;EAED,oBACIN,OAAA,CAAAE,SAAA;IAAAa,QAAA,eACIf,OAAA;MAAKgB,SAAS,EAAC,UAAU;MAAAD,QAAA,eACrBf,OAAA;QAAKgB,SAAS,EAAC,YAAY;QAAAD,QAAA,gBACvBf,OAAA;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACLpB,OAAA;UAAAe,QAAA,EAAI;QAAS;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClBpB,OAAA;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACLpB,OAAA;UAAOqB,IAAI,EAAC,MAAM;UAACC,WAAW,EAAC,aAAa;UAC5CV,KAAK,EAAEP,SAAU;UACjBkB,QAAQ,EAAEd;QAAU;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACtBpB,OAAA;UAAQwB,OAAO,EAAEX,WAAY;UAAAE,QAAA,EAAC;QAAC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACxCpB,OAAA;UAAAe,QAAA,EAEKR,KAAK,CAACkB,GAAG,CAAEC,OAAO,IAAG;YACnB,oBAAQ1B,OAAA,CAACF,SAAS;cAAC6B,IAAI,EAAED;YAAQ;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC,CAAC;UACtC,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC,gBACZ,CAAC;AAEX,CAAC;AAAChB,EAAA,CArCID,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAsCT,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}